# Use a modern version of the Compose file format
version: '3.8'

services:
  # Main translation service
  lingua-translate:
    build: .
    # For a production setup, it's generally better to expose
    # this port to the Nginx container, not directly to the host.
    # The nginx service will handle external traffic.
    expose:
      - "5000"
    environment:
      - FLASK_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    # Volumes are correctly configured for local development.
    # For a production server, you might prefer named volumes for persistence.
    # The volumes here are fine for a development/staging environment.
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    # Always restart the service unless it's explicitly stopped.
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis for caching and session management
  redis:
    # Use a specific, stable image tag for better consistency
    image: redis:7-alpine
    # Expose the port only internally for security.
    # No other service needs to access Redis from outside the network.
    expose:
      - "6379"
    volumes:
      # Use a named volume for persistent data, which is more robust
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Nginx reverse proxy
  nginx:
    # Use a specific, stable image tag
    image: nginx:1.25-alpine
    ports:
      # Expose ports 80 and 443 to the host
      - "80:80"
      - "443:443"
    volumes:
      # Mount configuration and SSL certificates as read-only
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - lingua-translate
    restart: unless-stopped

  # Monitoring with Prometheus
  prometheus:
    # Use a specific, stable image tag
    image: prom/prometheus:v2.49.1
    # Expose the port to the host
    ports:
      - "9090:9090"
    volumes:
      # Mount the configuration file as read-only
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      # Use a named volume for persistent monitoring data
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped

  # Grafana for dashboards
  grafana:
    # Use a specific, stable image tag
    image: grafana/grafana:10.3.3
    # Expose the port to the host
    ports:
      - "3000:3000"
    environment:
      # NOTE: It's better to manage this password using secrets
      # For a basic setup, this is fine, but for production,
      # consider using environment variables managed by a secret store.
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      # Use a named volume for persistent Grafana data
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
